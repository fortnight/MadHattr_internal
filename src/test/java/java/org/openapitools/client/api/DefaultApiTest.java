/*
 * MadHattr
 * A basic api to demonstrate CRUD operations.
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.api;

import org.openapitools.client.*;
import org.openapitools.client.auth.*;
import org.openapitools.client.model.Hat;
import org.openapitools.client.model.NewHat;
import org.junit.Assert;
import org.junit.Ignore;
import org.junit.Test;


import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

/**
 * API tests for DefaultApi
 */
public class DefaultApiTest {

    private final DefaultApi api = new DefaultApi();

    /**
     * Create a newHat
     *
     * Creates a new instance of a &#x60;newHat&#x60;.
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void createNewHatTest() throws ApiException {
        //NewHat body = null;
        //api.createNewHat(body);
        // TODO: test validations
    }

    /**
     * Delete a Hat
     *
     * Deletes an existing &#x60;Hat&#x60;.
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void deleteHatTest() throws ApiException {
        //String hatId = null;
        //api.deleteHat(hatId);
        // TODO: test validations
    }

    /**
     * Get a Hat
     *
     * Gets the details of a single instance of a &#x60;Hat&#x60;.
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void getHatTest() throws ApiException {
        //String hatId = null;
        //Hat response = api.getHat(hatId);
        // TODO: test validations
    }

    /**
     * List All Hats
     *
     * Gets a list of all &#x60;Hat&#x60; entities.
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void getHatsTest() throws ApiException {
        //List<Hat> response = api.getHats();
        // TODO: test validations
    }

    /**
     * Update a Hat
     *
     * Updates an existing &#x60;Hat&#x60;.
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void updateHatTest() throws ApiException {
        //String hatId = null;
        //Hat body = null;
        //api.updateHat(hatId, body);
        // TODO: test validations
    }

}
